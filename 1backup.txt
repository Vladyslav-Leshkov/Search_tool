/* App.js */

import React, { useState } from 'react';
import Select from 'react-select';
import countries from './countries'; // Імпортуємо список країн
import './App.css';

function App() {
  const [location, setLocation] = useState('');
  const [jobTitle, setJobTitle] = useState('');
  const [keywordToInclude, setKeywordToInclude] = useState('');
  const [keywordToExclude, setKeywordToExclude] = useState('');
  const [inputsLeft, setInputsLeft] = useState([]);
  const [inputsRight, setInputsRight] = useState([]);

  const handleSearch = () => {
    const inputValues = {
      input3: jobTitle ? `intitle:${jobTitle}` : '',
      input2: location ? `${location}+AND` : '',
      input5: keywordToInclude ? `${keywordToInclude}+AND` : '',
      input4: keywordToExclude ? `-${keywordToExclude}+AND` : '',
      ...inputsRight.reduce((acc, currentValue, index) => {
        acc[`inputR${index + 6}`] = currentValue ? `-${currentValue}+AND` : '';
        return acc;
      }, {}),
      ...inputsLeft.reduce((acc, currentValue, index) => {
        acc[`inputL${index + 6}`] = currentValue ? `${currentValue}+AND` : '';
        return acc;
      }, {})
    };

    const queryString = Object.entries(inputValues)
      .map(([key, value]) => value)
      .filter(value => value !== '')
      .join('+');
    const link = `https://www.google.com/search?q=site:linkedin.com/in/ ${queryString}`;

    window.open(link, '_blank');
  };

  const handleAddInputLeft = () => {
    setInputsLeft([...inputsLeft, '']);
  };

  const handleAddInputRight = () => {
    setInputsRight([...inputsRight, '']);
  };

  const handleInputChangeLeft = (index, value) => {
    const newInputs = [...inputsLeft];
    newInputs[index] = value;
    setInputsLeft(newInputs);
  };

  const handleInputChangeRight = (index, value) => {
    const newInputs = [...inputsRight];
    newInputs[index] = value;
    setInputsRight(newInputs);
  };

  const handleInputCloseLeft = (index) => {
    const newInputs = [...inputsLeft];
    newInputs.splice(index, 1);
    setInputsLeft(newInputs);
  };

  const handleInputCloseRight = (index) => {
    const newInputs = [...inputsRight];
    newInputs.splice(index, 1);
    setInputsRight(newInputs);
  };

  return (
    <div>
      <div className="header">
        <h1>Мій проект</h1>
      </div>

      <div className="container">
        <div className="left-container">
          <div className="input-container">
            <label>Виберіть країну</label>
            <Select className="select-country" options={countries} />
          </div>

          <div className="input-container">
            <label>Job title</label>
            <input
              type="text"
              placeholder="Job title"
              value={jobTitle}
              onChange={(e) => setJobTitle(e.target.value)}
              className="input"
            />
          </div>

          <div className="input-container">
            <label>Keyword to include</label>
            <div className="input-with-button">
              <input
                type="text"
                placeholder="Keyword to include"
                value={keywordToInclude}
                onChange={(e) => setKeywordToInclude(e.target.value)}
                className="input"
              />
              <button onClick={handleAddInputLeft} className="add-input-button">Додати інпут</button>
            </div>
          </div>

          {inputsLeft.map((value, index) => (
            <div key={index} className="input-container">
              <label>{`Введіть значення для inputL${index + 6}`}</label>
              <div className="input-with-close">
                <input
                  type="text"
                  placeholder={`Введіть значення для inputL${index + 6}`}
                  value={value}
                  onChange={(e) => handleInputChangeLeft(index, e.target.value)}
                  className="input"
                />
                <button onClick={() => handleInputCloseLeft(index)} className="close-button">✖</button>
              </div>
            </div>
          ))}
        </div>

        <div className="right-container">
          <div className="input-container">
            <label>Location</label>
            <input
              type="text"
              placeholder="Location"
              value={location}
              onChange={(e) => setLocation(e.target.value)}
              className="input"
            />
          </div>

          <div className="input-container">
            <label>Keyword to exclude</label>
            <div className="input-with-button">
              <input
                type="text"
                placeholder="Keyword to exclude"
                value={keywordToExclude}
                onChange={(e) => setKeywordToExclude(e.target.value)}
                className="input"
              />
              <button onClick={handleAddInputRight} className="add-input-button">Додати інпут</button>
            </div>
          </div>

          {inputsRight.map((value, index) => (
            <div key={index} className="input-container">
              <label>{`Введіть значення для inputR${index + 6}`}</label>
              <div className="input-with-close">
                <input
                  type="text"
                  placeholder={`Введіть значення для inputR${index + 6}`}
                  value={value}
                  onChange={(e) => handleInputChangeRight(index, e.target.value)}
                  className="input"
                />
                <button onClick={() => handleInputCloseRight(index)} className="close-button">✖</button>
              </div>
            </div>
          ))}
        </div>
      </div>

      <div className="button-container-center">
        <button className="search-button" onClick={handleSearch}>
          <b>X-Ray search via LinkedIn</b>
        </button>
      </div>

      <div className="footer">
        <p>Pytin Xyilo</p>
      </div>
    </div>
  );
}

export default App;
